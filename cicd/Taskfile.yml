# https://taskfile.dev

version: '2'
output: 'group'
output: prefixed

vars:
  GREETING: Hello, World!
  DIMG: {sh: cat dimg.txt}

_user_:
  root_task: &_root_task
    desc: _
    dir: ..

tasks:
  default:
    cmds:
      - echo "{{.GREETING }}{{.DIMG}}"
    silent: true

  docker:build:
    desc: _
    cmds:
      - DOCKER_API_VERSION=1.38 docker build -f test.Dockerfile -t '{{.DIMG}}' .

  pytest: &_pytest
    <<: *_root_task
    cmds:
      - echo $(pwd)
      - PYVER='py{{.pyver}}' ./cicd/drun.sh python -u -m pytest

  docker:run:test:
    <<: *_root_task
    deps:
      - task: pytest
        vars: {pyver: 2.7}
      - task: pytest
        vars: {pyver: 3.6}
    cmds:
      - echo passed in all

  drun:tests:
    <<: *_root_task
    cmds:
      - task -d cicd -p pytest pyver=3.6 pytest pyver=2.7
      - echo passed in all

  pytest2.7:
    <<: *_pytest
    vars: {pyver: 2.7}

  pytest3.6:
    <<: *_pytest
    vars: {pyver: 3.6}

  test:
    <<: *_root_task
    deps:
      - pytest2.7
      - pytest3.6
    cmds:
      - echo passed in all

  build:base:
    <<: *_root_task
    cmds:
      - DOCKER_API_VERSION=1.38 task -d cicd/gzvulon__base_docker rebuild

  _check:
    <<: *_root_task
    cmds:
      - |
        {{.cmd}}

  checks:
    <<: *_root_task
    envs:
      DOCKER_API_VERSION: '1.38'
    env:
      DOCKER_API_VERSION: '1.38'
    # deps:
    #   - task: _check
    #     vars: {cmd: echo $(pwd)}
    #   - task: _check
    #     vars: {cmd: docker ps}
    #   - task: _check
    #     vars: {cmd: ls gzvulon__base_docker}
    cmds:
      - task -d cicd -p _check cmd='echo $(pwd)' _check cmd='docker ps' _check cmd='ls cicd/gzvulon__base_docker'

  ci-flow:
    <<: *_root_task
    envs:
      DOCKER_API_VERSION: '1.38'
    cmds:
      - task: checks
      - task: build:base
      - task: docker:build
      - task: test
