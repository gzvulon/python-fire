# https://taskfile.dev

version: '2'

vars:
  GREETING: Hello, World!
  target_dockerfile: generated/auto.Dockerfile
  target_autobuild: generated/auto.build.sh
  target_defaultbuild: generated/default.build.sh

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
      - task -l
    silent: true

  show-docker-part:
    desc: _
    req:
      target: string
    cmds:
      - tail -n +4 '{{.target}}'

  test:show-docker-part:
    desc: _
    cmds:
      - task: show-docker-part
        vars: {target: docker.parts/dtask.part.Dockerfile}
    silent: yes

  gen-docker-file:
    desc: _
    vars:
      docker_parts:
        sh: ls -1 docker.parts/*.part.Dockerfile | sort
    cmds:
      - echo 'FROM ubuntu:18.04' > '{{.target_dockerfile}}'
      - |
        echo '{{.docker_parts}}' \
        | xargs -I {} \
        task show-docker-part target={} \
        >> {{.target_dockerfile}}

      - echo '#!/bin/bash' > '{{.target_defaultbuild}}'
      - echo '$(cat auto.Dockerfile | grep @@@build | cut -d"#" -f3)' >> '{{.target_defaultbuild}}'
      - chmod +x '{{.target_defaultbuild}}'
    sources:
      - 'docker_parts/*.part.Dockerfile'
    generates:
      - "{{.target_dockerfile}}"
    method: checksum

  gen-build-sh:
    desc: _
    cmds:
      - echo '#!/bin/bash' > '{{.target_autobuild}}'
      - echo 'cd "$(dirname "$(realpath "$0" || readlink -f "$0")")"' >> '{{.target_autobuild}}'
      - echo '#---' >> '{{.target_autobuild}}'
      - task build:dtask --dry >> '{{.target_autobuild}}'  2>&1
      - chmod +x '{{.target_autobuild}}'
    sources:
      - Taskfile.yml
    generates:
      - '{{.target_autobuild}}'
    method: checksum

  build:dtask:
    desc: _
    cmds:
      - docker build -f '{{.target_dockerfile}}' -t dtaskimg .

  rebuild:dtask:
    desc: _
    deps:
      - gen-docker-file
      - gen-build-sh
    cmds:
      - bash '{{.target_autobuild}}'




